name: 'Build Docker image'
description: 'Build Rocket.Chat Docker image'

inputs:
  root-dir:
    required: true
  docker-tag:
    required: true
  username:
    required: false
  password:
    required: false
  registry:
    required: true

outputs:
  image-name:
    value: ${{ steps.build-image.outputs.image-name }}

runs:
  using: composite
  steps:
    # - shell: bash
    #   name: Free disk space
    #   run: |
    #     sudo swapoff -a
    #     sudo rm -f /swapfile
    #     sudo apt clean
    #     docker rmi $(docker image ls -aq)
    #     df -h

    - shell: bash
      id: build-image
      run: |
        cd ${{ inputs.root-dir }}
        # LOWERCASE_REPOSITORY
        IMAGE_NAME="${{ inputs.registry }}/paiya/rocketchat:${{ inputs.docker-tag }}"
        echo "Build Docker image ${IMAGE_NAME}"
        DOCKER_PATH="${GITHUB_WORKSPACE}/apps/meteor/.docker"
        if [ -e ${DOCKER_PATH}/entrypoint.sh ]; then
          cp ${DOCKER_PATH}/entrypoint.sh .
        fi;
        docker build -t $IMAGE_NAME .
        echo "::set-output name=image-name::${IMAGE_NAME}"
    - name: Login to Aliyun Container Registry
      uses: docker/login-action@v2
      with:
        registry: ${{ inputs.registry }}
        username: ${{ inputs.username }}
        password: ${{ inputs.password }}

    - name: Publish image
      shell: bash
      run: |
        echo "Push Docker image: ${{ steps.build-image.outputs.image-name }}"
        docker push ${{ steps.build-image.outputs.image-name }}
